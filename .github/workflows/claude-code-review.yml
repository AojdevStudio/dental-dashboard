name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    timeout-minutes: 30    # Add this line
    if: |
      (github.event_name == 'issue_comment' && github.event.comment && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && github.event.comment && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && github.event.review && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && github.event.issue && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: write          # For creating commits/branches
      pull-requests: write     # For creating/updating PRs and comments
      issues: write           # For updating issue comments
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            
            Be constructive and helpful in your feedback.

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Enable specific tools for the Node.js project
          allowed_tools: "Bash(pnpm install),Bash(pnpm build),Bash(pnpm lint),Bash(pnpm typecheck),Bash(pnpm test),Bash(pnpm biome:check)"

          # Project-specific instructions for Claude
          custom_instructions: |
            Follow our coding standards defined in CLAUDE.md
            Ensure all new code has tests
            Use TypeScript for new files
            Run pnpm biome:check after changes
            Always use absolute imports with @/ prefix
                    # Optional: Skip review for certain conditions
                    # if: |
                    #   !contains(github.event.pull_request.title, '[skip-review]') &&
                    #   !contains(github.event.pull_request.title, '[WIP]')
     
      - name: Handle Claude Review Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå Claude Code review failed. Please check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
            })
